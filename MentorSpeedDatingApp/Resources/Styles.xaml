<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:MentorSpeedDatingApp.Converter"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <converter:TimeOfDayMinutesConverter x:Key="TimeOfDayMinutesConverter" />
    <converter:MultiBindingNameConverter x:Key="NameConverter" />
    <converter:PersonToTextConverter x:Key="PersonToTextConverter" />

    <!-- Colors Begin -->
    <Color x:Key="HealthCareGreenDarkBackground">#65BC4A</Color>
    <Color x:Key="HealthCareGreenBrightBackground">#CFE7C3</Color>
    <Color x:Key="HealthCareTealAkzent">#56C3BE</Color>
    <Color x:Key="HealthCareGreenFieldDark">#67B432</Color>
    <Color x:Key="HealthCareGray">#808080</Color>
    <Color x:Key="HealthCareWhite">GhostWhite</Color>
    <SolidColorBrush x:Key="HealthCareGreenDarkBackgroundBrush" Color="#65BC4A" />
    <SolidColorBrush x:Key="HealthCareGreenBrightBackgroundBrush" Color="#CFE7C3" />
    <SolidColorBrush x:Key="HealthCareTealAkzentBrush" Color="#56C3BE" />
    <SolidColorBrush x:Key="HealthCareGreenFieldDarkBrush" Color="#67B432" />
    <SolidColorBrush x:Key="HealthCareGrayBrush" Color="#808080" />
    <SolidColorBrush x:Key="HealthCareWhiteBrush" Color="GhostWhite" />
    <!-- Colors End -->


    <!-- Begin Button Styles -->
    <Style TargetType="Button" x:Key="SideMenuButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="50" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Width" Value="80" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Margin" Value="0,10,0,10" />
        <Setter Property="Foreground" Value="{StaticResource HealthCareGreenFieldDarkBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="WhiteSmoke"
                            BorderThickness="1" BorderBrush="{StaticResource HealthCareGreenFieldDarkBrush}">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.7"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource HealthCareGreenBrightBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="MatchingButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="100" />
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="Width" Value="160" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="Margin" Value="0,10,0,10" />
        <Setter Property="Foreground" Value="{StaticResource HealthCareGreenFieldDarkBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="WhiteSmoke"
                            BorderThickness="1" BorderBrush="{StaticResource HealthCareGreenFieldDarkBrush}">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border"
                                    Property="Background" Value="{StaticResource HealthCareGrayBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HealthCareWhiteBrush}" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.7"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource HealthCareGreenBrightBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DatePickerTemplate1" TargetType="{x:Type DatePicker}">
        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_DisabledVisual"
                                             Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid.Resources>
                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="Background"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#FF08D94B" />
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="Background"
                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#FF08D94B" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                           Storyboard.TargetName="Highlight"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                          Storyboard.TargetName="BackgroundGradient"
                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center"
                                  Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="23*" />
                                    <RowDefinition Height="19*" />
                                    <RowDefinition Height="19*" />
                                    <RowDefinition Height="19*" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Highlight" BorderThickness="1" BorderBrush="#FF08D94B"
                                        CornerRadius="0,0,1,1" Grid.ColumnSpan="4" Margin="-1" Opacity="0"
                                        Grid.RowSpan="4" Grid.Row="0" />
                                <Border x:Name="Background" Background="#FF1F3B53" BorderThickness="1"
                                        BorderBrush="#FFFFFFFF" CornerRadius=".5" Grid.ColumnSpan="4" Margin="0,-1,0,0"
                                        Opacity="1" Grid.RowSpan="3" Grid.Row="1" />
                                <Border x:Name="BackgroundGradient" BorderThickness="1" BorderBrush="#BF000000"
                                        CornerRadius=".5" Grid.ColumnSpan="4" Margin="0,-1,0,0" Opacity="1"
                                        Grid.RowSpan="3" Grid.Row="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="White" Offset="0.375" />
                                            <GradientStop Color="White" Offset="0.625" />
                                            <GradientStop Color="White" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                            <GradientStop Color="White" />
                                            <GradientStop Color="White" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                            <GradientStop Color="#FF494949" />
                                            <GradientStop Color="#FF9F9F9F" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Path Grid.ColumnSpan="4" Grid.Column="0"
                                      Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                      Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3"
                                      RenderTransformOrigin="0.5,0.5" Grid.RowSpan="3" Grid.Row="1" Stretch="Fill"
                                      VerticalAlignment="Center" />
                                <Ellipse Grid.ColumnSpan="4" Fill="Black" HorizontalAlignment="Center" Height="3"
                                         StrokeThickness="0" VerticalAlignment="Center" Width="3" />
                                <Border x:Name="DisabledVisual" BorderThickness="1" BorderBrush="#B2FFFFFF"
                                        CornerRadius="0,0,.5,.5" Grid.ColumnSpan="4" Opacity="0" Grid.RowSpan="4"
                                        Grid.Row="0" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button x:Name="PART_Button" Grid.Column="1" Focusable="False"
                        Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="3,0,3,0"
                        Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top"
                        Width="20" />
                <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}"
                                   HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" />
                <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False"
                      Opacity="0" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Grid.Row="0" />
                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusX="1" RadiusY="1"
                               Grid.Row="0" Width="19" />
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom"
                           PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                <Setter Property="Foreground" TargetName="PART_TextBox"
                        Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" x:Key="MatchingWindowButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MaxHeight" Value="40" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="0,10,0,10" />
        <Setter Property="Foreground" Value="{StaticResource HealthCareGreenFieldDarkBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="LightGray"
                            BorderThickness="1" BorderBrush="{StaticResource HealthCareGreenFieldDarkBrush}">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border"
                                    Property="Background" Value="{StaticResource HealthCareGrayBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HealthCareWhiteBrush}" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.7"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource HealthCareGreenBrightBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="BottomMenuButtonStyle">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource HealthCareGreenFieldDarkBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="WhiteSmoke"
                            BorderThickness="1" BorderBrush="{StaticResource HealthCareGreenFieldDarkBrush}">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border"
                                    Property="Background" Value="WhiteSmoke" />
                            <Setter Property="Foreground" Value="{StaticResource HealthCareGreenFieldDarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.7"
                                                         Duration="0:0:0.1" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)" To="Red"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource HealthCareGreenFieldDark}" Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource HealthCareGreenBrightBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End Button Styles -->

    <!-- StackPanel Styles Begin -->
    <Style TargetType="StackPanel" x:Key="DataTemplateTimeStackPanelStyle">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    <!-- StackPanel Styles End -->

    <!-- TextBlock Styles Begin -->
    <Style TargetType="TextBox" x:Key="DataTemplateDateTimeTextBlockStyle">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!-- TextBlock Styles End -->

    <!-- TextBox Styles Begin -->
    <Style TargetType="TextBox" x:Key="DataTemplateMenteeTextBoxStyle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border BorderBrush="{StaticResource HealthCareGreenDarkBackgroundBrush}" BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource HealthCareGreenBrightBackground}" />
                        </Border.Background>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="IsDisabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HealthCareGray}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HealthCareGray}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="DataTemplateMentorTextBoxStyle">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{StaticResource HealthCareGreenDarkBackgroundBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <!-- TextBox Styles End -->

    <!--ComboBox Template Start-->
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0.0" />
        <GradientStop Color="White" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF08D94B" Offset="0.0" />
        <GradientStop Color="#FF08D94B" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF08D94B" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF08D94B" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0" />
        <GradientStop Color="#FFDCECFC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF08D94B" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0" />
        <GradientStop Color="#FFC4E0FC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF08D94B" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF08D94B" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0" />
        <GradientStop Color="#FFC4E0FC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF08D94B" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource ComboBox.Static.Border}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent"
                                HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0"
                                  VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow"
                                    Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1" Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <ScrollViewer.Resources>
                                <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">10</system:Double>
                            </ScrollViewer.Resources>
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Grid.Column="0" x:Name="toggleButton" Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter Grid.Column="0" x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="shadow" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--ComboBox Template End-->

    <!--ComboBoxItem Style Start-->
    <Style x:Key="ComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="#9AEDAB" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderThickness"
                                    Value="2" />
                            <Setter Property="BorderBrush"
                                    Value="#9AEDAB" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ComboBoxItem Style Template End-->

    <!--Button Template Start-->
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#9AEDAB" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#9AEDAB" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#afccab" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#afccab" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <ControlTemplate x:Key="ButtonTemplate" TargetType="ButtonBase">
        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="borderContentPresenter" Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder" Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="borderContentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" TargetName="buttonBorder" Value="#e5e5e5" />
                <Setter Property="BorderBrush" TargetName="buttonBorder" Value="#FF08D94B" />
                <Setter Property="BorderThickness" TargetName="buttonBorder" Value="1.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--Button Template End-->

    <!--DataGridCell Style Start-->
    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="DimGray" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#afccab" />
                <Setter Property="BorderBrush" Value="#afccab" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#afccab" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1.75" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DataGridCell Style End-->

    <!--DataGridRow Style Start-->
    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="MinHeight" Value="30" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#9AEDAB" />
                <Setter Property="BorderBrush" Value="#9AEDAB" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#afccab" />
                <Setter Property="BorderBrush" Value="#afccab" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#afccab" />
                <Setter Property="BorderBrush" Value="#afccab" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#f5f5f5" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#f5f5f5" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#f5f5f5" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#9AEDAB" />
                    <Setter Property="BorderBrush" Value="#9AEDAB" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#afccab" />
                    <Setter Property="BorderBrush" Value="#afccab" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AlternationIndex" Value="1" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#afccab" />
                    <Setter Property="BorderBrush" Value="#afccab" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--DataGridRow Style End-->

    <!--DatagridColumnHeader Style Start-->
    <Style x:Key="DatagridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    <!--DatagridColumnHeader Style End-->

    <!--DataGridRowHeader Style Start-->
    <Style x:Key="DataGridRowHeaderStyle" TargetType="DataGridRowHeader">
        <Setter Property="Width" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#FF08D94B" BorderThickness="0,0,4,0"
                            Background="White">
                        <Border BorderBrush="DarkGray" BorderThickness="0,0,0,1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--DataGridRowHeader Style End-->

    <!--DataGridTextBox Style Start-->
    <Style x:Key="DataGridTextBoxStyle" TargetType="TextBox">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="SelectionBrush" Value="#FF08D94B" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF08D94B" />
                            <Setter Property="BorderThickness"
                                    TargetName="border" Value="2" />
                            <Setter Property="Background" TargetName="border"
                                    Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DataGridTextBox Style End-->

    <!--DataGridTextColumnElement Style Start-->
    <Style x:Key="DataGridTextColumnElementStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <!--DataGridTextColumnElement Style End-->

    <!--MenuTextbox Style Start-->
    <Style x:Key="MenuTextboxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="34" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--MenuTextbox Style End-->

    <!--ListViewItem Style Start-->
    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="#67B432" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Margin" Value="1,2.5,1,2.5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border>
                        <TextBlock Text="{Binding}" Foreground="{TemplateBinding Foreground}" Background="Transparent"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5" />
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background"
                                        Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=Background}" />
                                <Setter Property="BorderBrush"
                                        Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=BorderBrush}" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#9AEDAB" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ListViewItem Style End-->

    <!--NavigationMenuToggleButtonTemplate Start-->
    <ControlTemplate x:Key="NavigationMenuToggleButtonTemplate" TargetType="ToggleButton">
        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <StackPanel Orientation="Horizontal">
                <StackPanel VerticalAlignment="Center" Height="34" Width="34">
                    <ContentPresenter x:Name="borderContentPresenter" Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Rectangle Width="15" Height="3" Fill="Black" Margin="0,11,0,1" />
                    <Rectangle Width="15" Height="3" Fill="Black" Margin="1" />
                    <Rectangle Width="15" Height="3" Fill="Black" Margin="1" />
                </StackPanel>
                <TextBox Text="Menu" Style="{StaticResource MenuTextboxStyle}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="borderContentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" TargetName="buttonBorder" Value="#e5e5e5" />
                <Setter Property="BorderBrush" TargetName="buttonBorder" Value="#FF08D94B" />
                <Setter Property="BorderThickness" TargetName="buttonBorder" Value="1.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--NavigationMenuToggleButtonTemplate End-->

    <!--NavigationMenuDeleteAllButtonTemplate Start-->
    <ControlTemplate x:Key="NavigationMenuDeleteAllButtonTemplate" TargetType="Button">
        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <StackPanel Orientation="Horizontal">
                <StackPanel VerticalAlignment="Center" Width="34" Height="34">
                    <ContentPresenter x:Name="borderContentPresenter" Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Path Stroke="Black" Fill="Black"
                          Data="
                                          M 11.5, 22     L 21.5, 22 
                                          M 21.5, 22     L 21.5, 10 
                                          M 11.5, 22     L 11.5, 10
                                          M 23,   10      L 10,  10 
                                          M 23,   9.5    L 10,   9.5 
                                          M 23,   9      L 10,   9 
                                          M 14,   20     L 14,   6
                                          M 16.5, 20     L 16.5, 8.5 
                                          M 19,   20     L 19,   6 
                                          M 14,   6.5    L 19,   6.5" />
                </StackPanel>
                <TextBox Text="Alles löschen!" Style="{StaticResource MenuTextboxStyle}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="borderContentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" TargetName="buttonBorder" Value="#e5e5e5" />
                <Setter Property="BorderBrush" TargetName="buttonBorder" Value="#FF08D94B" />
                <Setter Property="BorderThickness" TargetName="buttonBorder" Value="1.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--NavigationMenuDeleteAllButtonTemplate End-->

    <!--NavigationMenuSaveAsButtonTemplate Start-->
    <ControlTemplate x:Key="NavigationMenuSaveAsButtonTemplate" TargetType="Button">
        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <StackPanel Orientation="Horizontal">
                <StackPanel VerticalAlignment="Center" Height="34" Width="34">
                    <ContentPresenter x:Name="borderContentPresenter" Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Path Stroke="Black" Fill="Black"
                          Data="
                                          M 8,  24.5  L 25, 24.5
                                          M 8,  24.7  L 8,  7.3
                                          M 7.8,7.5  L 21.2, 7.5
                                          M 25, 24.7  L 25, 11.7
                                          M 25, 12     L 21, 7.5
                                          M 10, 7.5  L 10, 14
                                          M 9.6, 14    L 19.4, 14
                                          M 19, 14     L 19, 7.5
                                          M 11, 7.5  L 11, 14
                                          M 12, 7.5  L 12, 14
                                          M 13, 7.5  L 13, 14
                                          M 14, 7.5  L 14, 14
                                          M 15, 7.5  L 15, 14
                                          M 16, 7.5  L 16, 14" />
                </StackPanel>
                <TextBox Text="Speichern unter" Style="{StaticResource MenuTextboxStyle}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="borderContentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" TargetName="buttonBorder" Value="#e5e5e5" />
                <Setter Property="BorderBrush" TargetName="buttonBorder" Value="#FF08D94B" />
                <Setter Property="BorderThickness" TargetName="buttonBorder" Value="1.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--NavigationMenuSaveAsButtonTemplate End-->

    <!--NavigationMenuShowInfoButtonTemplate Start-->
    <ControlTemplate x:Key="NavigationMenuShowInfoButtonTemplate" TargetType="Button">
        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <StackPanel Orientation="Horizontal">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="34" Height="34">
                    <ContentPresenter x:Name="borderContentPresenter" Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Ellipse Width="15" Height="15" Stroke="Black" />
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" FontWeight="Bold"
                               FontFamily="Sylfaen">
                        i
                    </TextBlock>
                </Grid>
                <TextBox Text="Info" Style="{StaticResource MenuTextboxStyle}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="buttonBorder"
                        Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="borderContentPresenter"
                        Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" TargetName="buttonBorder" Value="#e5e5e5" />
                <Setter Property="BorderBrush" TargetName="buttonBorder" Value="#FF08D94B" />
                <Setter Property="BorderThickness" TargetName="buttonBorder" Value="1.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--NavigationMenuShowInfoButtonTemplate End-->

    <!--DatePickerStyle Start-->
    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="Calendar">
                    <Setter Property="CalendarDayButtonStyle">
                        <Setter.Value>
                            <Style TargetType="CalendarDayButton">
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Height" Value="23" />
                                <Setter Property="Width" Value="23" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CalendarDayButton">
                                            <Border x:Name="buttonBorder"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter
                                                    x:Name="borderContentPresenter"
                                                    Focusable="False"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Margin="{TemplateBinding Padding}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Button.IsDefaulted"
                                                         Value="true">
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.MouseOver.Background}" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.MouseOver.Border}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Pressed.Background}" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Pressed.Border}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Disabled.Background}" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Disabled.Border}" />
                                                    <Setter Property="TextElement.Foreground"
                                                            TargetName="borderContentPresenter"
                                                            Value="{StaticResource Button.Disabled.Foreground}" />
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="#FF08D94B" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="#FF08D94B" />
                                                    <Setter Property="BorderThickness"
                                                            TargetName="buttonBorder"
                                                            Value="1.5" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="CalendarButtonStyle">
                        <Setter.Value>
                            <Style TargetType="CalendarButton">
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Height" Value="23" />
                                <Setter Property="Width" Value="23" />
                                <Setter Property="Background" Value="White" />

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CalendarButton">
                                            <Border x:Name="buttonBorder"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter
                                                    x:Name="borderContentPresenter"
                                                    Focusable="False"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Margin="{TemplateBinding Padding}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Button.IsDefaulted"
                                                         Value="true">
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.MouseOver.Background}" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.MouseOver.Border}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Pressed.Background}" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Pressed.Border}" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Disabled.Background}" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="{StaticResource Button.Disabled.Border}" />
                                                    <Setter Property="TextElement.Foreground"
                                                            TargetName="borderContentPresenter"
                                                            Value="{StaticResource Button.Disabled.Foreground}" />
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Background"
                                                            TargetName="buttonBorder"
                                                            Value="#FF08D94B" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="buttonBorder"
                                                            Value="#FF08D94B" />
                                                    <Setter Property="BorderThickness"
                                                            TargetName="buttonBorder"
                                                            Value="1.5" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Calendar">
                                <Viewbox Width="300" Height="350">
                                    <CalendarItem x:Name="PART_CalendarItem"
                                                  BorderBrush="DarkGray" BorderThickness="1"
                                                  Background="White">
                                        <CalendarItem.Template>
                                            <ControlTemplate TargetType="CalendarItem">
                                                <ControlTemplate.Resources>
                                                    <!-- Start: Data template for header button -->
                                                    <DataTemplate x:Key="DayTitleTemplate">
                                                        <TextBlock
                                                            FontWeight="Bold"
                                                            FontFamily="Verdana"
                                                            FontSize="9.5"
                                                            Foreground="#FF333333"
                                                            HorizontalAlignment="Center"
                                                            Text="{Binding}"
                                                            Margin="0,6,0,6"
                                                            VerticalAlignment="Center" />
                                                    </DataTemplate>
                                                    <!-- End: Data template for header button -->
                                                </ControlTemplate.Resources>
                                                <Grid Name="PART_Root">
                                                    <Grid.Resources>
                                                        <SolidColorBrush x:Key="DisabledColor"
                                                                         Color="#A5FFFFFF" />
                                                    </Grid.Resources>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="PART_DisabledVisual"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        To="1" Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>

                                                    <Border
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="1">

                                                        <!-- This Brush is new -->
                                                        <Border.Background>
                                                            <LinearGradientBrush
                                                                StartPoint="0 0"
                                                                EndPoint="0 1">
                                                                <GradientStop Offset="0"
                                                                              Color="White" />
                                                                <GradientStop Offset="0.5"
                                                                              Color="White" />
                                                                <GradientStop Offset="1"
                                                                              Color="White" />
                                                            </LinearGradientBrush>
                                                        </Border.Background>

                                                        <Border CornerRadius="1"
                                                                BorderBrush="#FFFFFFFF"
                                                                BorderThickness="2">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition
                                                                        Height="Auto" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition
                                                                        Width="Auto" />
                                                                    <ColumnDefinition
                                                                        Width="Auto" />
                                                                    <ColumnDefinition
                                                                        Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <Grid.Resources>
                                                                    <!-- Start: Previous button template -->
                                                                    <ControlTemplate
                                                                        x:Key="PreviousButtonTemplate"
                                                                        TargetType="Button">
                                                                        <Grid Cursor="Hand">
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup
                                                                                    x:Name="CommonStates">
                                                                                    <VisualState
                                                                                        x:Name="Normal" />
                                                                                    <VisualState
                                                                                        x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ColorAnimation
                                                                                                Storyboard.TargetName="TextColor"
                                                                                                Storyboard.TargetProperty="Color"
                                                                                                To="#9AEDAB"
                                                                                                Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState
                                                                                        x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation
                                                                                                Storyboard.TargetName="TextColor"
                                                                                                Storyboard.TargetProperty="Opacity"
                                                                                                To=".5"
                                                                                                Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <Rectangle
                                                                                Fill="#11E5EBF1"
                                                                                Stretch="Fill"
                                                                                Opacity="1" />
                                                                            <Grid>
                                                                                <Path
                                                                                    Margin="14,-6,0,0"
                                                                                    Height="10"
                                                                                    Width="6"
                                                                                    VerticalAlignment="Center"
                                                                                    HorizontalAlignment="Left"
                                                                                    Stretch="Fill"
                                                                                    Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
                                                                                    <Path.Fill>
                                                                                        <SolidColorBrush
                                                                                            x:Name="TextColor"
                                                                                            Color="#FF333333" />
                                                                                    </Path.Fill>
                                                                                </Path>
                                                                            </Grid>
                                                                        </Grid>
                                                                    </ControlTemplate>

                                                                    <!-- End: Previous button template -->

                                                                    <!-- Start: Next button template -->
                                                                    <ControlTemplate
                                                                        x:Key="NextButtonTemplate"
                                                                        TargetType="Button">
                                                                        <Grid Cursor="Hand">
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup
                                                                                    x:Name="CommonStates">
                                                                                    <VisualState
                                                                                        x:Name="Normal" />
                                                                                    <VisualState
                                                                                        x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ColorAnimation
                                                                                                Storyboard.TargetName="TextColor"
                                                                                                Storyboard.TargetProperty="Color"
                                                                                                To="#9AEDAB"
                                                                                                Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState
                                                                                        x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation
                                                                                                Storyboard.TargetName="TextColor"
                                                                                                Storyboard.TargetProperty="Opacity"
                                                                                                To=".5"
                                                                                                Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <Rectangle
                                                                                Fill="#11E5EBF1"
                                                                                Stretch="Fill"
                                                                                Opacity="1" />
                                                                            <Grid>
                                                                                <Path
                                                                                    Margin="0,-6,14,0"
                                                                                    Height="10"
                                                                                    Width="6"
                                                                                    VerticalAlignment="Center"
                                                                                    HorizontalAlignment="Right"
                                                                                    Stretch="Fill"
                                                                                    Data="M282.875,231.875 L282.875,240.375 L288.625,236 z">
                                                                                    <Path.Fill>
                                                                                        <SolidColorBrush
                                                                                            x:Name="TextColor"
                                                                                            Color="#FF333333" />
                                                                                    </Path.Fill>
                                                                                </Path>
                                                                            </Grid>
                                                                        </Grid>
                                                                    </ControlTemplate>

                                                                    <!-- End: Next button template -->

                                                                    <!-- Start: Header button template -->
                                                                    <ControlTemplate
                                                                        x:Key="HeaderButtonTemplate"
                                                                        TargetType="Button">
                                                                        <Grid Cursor="Hand">
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup
                                                                                    x:Name="CommonStates">
                                                                                    <VisualState
                                                                                        x:Name="Normal" />
                                                                                    <VisualState
                                                                                        x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ColorAnimation
                                                                                                Storyboard.TargetName="TextColor"
                                                                                                Storyboard.TargetProperty="Color"
                                                                                                To="#9AEDAB"
                                                                                                Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState
                                                                                        x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation
                                                                                                Storyboard.TargetName="buttonContent"
                                                                                                Storyboard.TargetProperty="Opacity"
                                                                                                To=".5"
                                                                                                Duration="0" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>

                                                                            <!-- This Border is new -->
                                                                            <Border
                                                                                Padding="12 0">

                                                                                <!--<Border.Background>
                                                                                                            <LinearGradientBrush
                                                                                                                StartPoint="0 0"
                                                                                                                EndPoint="0 1">
                                                                                                                <GradientStop
                                                                                                                    Offset="0"
                                                                                                                    Color="#FFC4A0" />
                                                                                                                <GradientStop
                                                                                                                    Offset="1"
                                                                                                                    Color="#FF9450" />
                                                                                                            </LinearGradientBrush>
                                                                                                        </Border.Background>-->

                                                                                <ContentPresenter
                                                                                    x:Name="buttonContent"
                                                                                    Content="{TemplateBinding Content}"
                                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                    Margin="1,4,1,9"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                    <TextElement.Foreground>
                                                                                        <SolidColorBrush
                                                                                            x:Name="TextColor"
                                                                                            Color="#FF333333" />
                                                                                    </TextElement.Foreground>
                                                                                </ContentPresenter>
                                                                            </Border>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                    <!-- End: Header button template -->

                                                                </Grid.Resources>

                                                                <!-- Start: Previous button content -->
                                                                <Button
                                                                    x:Name="PART_PreviousButton"
                                                                    Grid.Row="0"
                                                                    Grid.Column="0"
                                                                    Template="{StaticResource PreviousButtonTemplate}"
                                                                    Height="20" Width="28"
                                                                    HorizontalAlignment="Left"
                                                                    Focusable="False" />
                                                                <!-- End: Previous button content -->

                                                                <!-- Start: Header button content -->
                                                                <Button
                                                                    x:Name="PART_HeaderButton"
                                                                    Grid.Row="0"
                                                                    Grid.Column="1"
                                                                    Template="{StaticResource HeaderButtonTemplate}"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    FontWeight="Bold"
                                                                    FontSize="10.5"
                                                                    Focusable="False" />
                                                                <!-- End: Header button content -->

                                                                <!-- Start: Next button content -->
                                                                <Button
                                                                    x:Name="PART_NextButton"
                                                                    Grid.Row="0"
                                                                    Grid.Column="2"
                                                                    Height="20" Width="28"
                                                                    HorizontalAlignment="Right"
                                                                    Template="{StaticResource NextButtonTemplate}"
                                                                    Focusable="False" />
                                                                <!-- End: Next button content -->

                                                                <!-- Start: Month Content Grid -->
                                                                <Grid x:Name="PART_MonthView"
                                                                      Grid.Row="1"
                                                                      Grid.ColumnSpan="3"
                                                                      Visibility="Visible"
                                                                      Margin="6,-1,6,6">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                </Grid>
                                                                <!-- End: Month Content Grid -->

                                                                <!-- End: Year Content Grid -->
                                                                <Grid x:Name="PART_YearView"
                                                                      Grid.Row="1"
                                                                      Grid.ColumnSpan="3"
                                                                      Visibility="Hidden"
                                                                      Margin="6,-3,7,6">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                        <RowDefinition
                                                                            Height="Auto" />
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                        <ColumnDefinition
                                                                            Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                </Grid>
                                                                <!-- End: Year Content Grid -->
                                                            </Grid>
                                                        </Border>
                                                    </Border>
                                                    <Rectangle x:Name="PART_DisabledVisual"
                                                               Opacity="0"
                                                               Visibility="Collapsed"
                                                               Stretch="Fill"
                                                               StrokeThickness="1" RadiusX="2"
                                                               RadiusY="2"
                                                               Stroke="{StaticResource DisabledColor}"
                                                               Fill="{StaticResource DisabledColor}" />

                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter
                                                            TargetName="PART_DisabledVisual"
                                                            Property="Visibility"
                                                            Value="Visible" />
                                                    </Trigger>
                                                    <DataTrigger Value="Year">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="DisplayMode">
                                                                <Binding.RelativeSource>
                                                                    <RelativeSource
                                                                        Mode="FindAncestor"
                                                                        AncestorType="{x:Type Calendar}" />
                                                                </Binding.RelativeSource>
                                                            </Binding>
                                                        </DataTrigger.Binding>
                                                        <Setter TargetName="PART_MonthView"
                                                                Property="Visibility"
                                                                Value="Hidden" />
                                                        <Setter TargetName="PART_YearView"
                                                                Property="Visibility"
                                                                Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Value="Decade">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="DisplayMode">
                                                                <Binding.RelativeSource>
                                                                    <RelativeSource
                                                                        Mode="FindAncestor"
                                                                        AncestorType="{x:Type Calendar}" />
                                                                </Binding.RelativeSource>
                                                            </Binding>
                                                        </DataTrigger.Binding>
                                                        <Setter TargetName="PART_MonthView"
                                                                Property="Visibility"
                                                                Value="Hidden" />
                                                        <Setter TargetName="PART_YearView"
                                                                Property="Visibility"
                                                                Value="Visible" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </CalendarItem.Template>
                                    </CalendarItem>
                                </Viewbox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Language" Value="de" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--DatePickerStyle End-->

    <!--DatePickerTextBoxStyle Start-->
    <ResourceDictionary x:Key="DatePickerTextBoxStyle">
        <Style TargetType="DatePickerTextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox
                            Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DatePicker},
                                                    Path=SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='dd.MM.yyyy'}"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            Name="HeadlineTextBox" SelectionBrush="#FF08D94B"
                            BorderBrush="Transparent">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <Border x:Name="border"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="1">
                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                  Focusable="false"
                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                  VerticalScrollBarVisibility="Hidden" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="BorderBrush"
                                                                TargetName="border"
                                                                Value="Transparent" />
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="true">
                                                        <Setter Property="BorderBrush"
                                                                TargetName="border"
                                                                Value="Transparent" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ResourceDictionary>
    <!--DatePickerTextBoxStyle End-->

    <!--WaterMarkTextBoxStyle Start-->
    <Style x:Key="WaterMarkTextBoxStyle" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="LightGray"
                            BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="#FF08D94B" />
                            <Setter Property="BorderThickness" TargetName="border" Value="2" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="#FF08D94B" />
                            <Setter Property="BorderThickness" TargetName="border" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--WaterMarkTextBoxStyle End-->

    <!--WaterMarkTextBlockStyle Start-->
    <Style x:Key="WaterMarkTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Text, ElementName=HeadlineTextBox}" Value="">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--WaterMarkTextBlockStyle End-->

    <!--ComboBoxItem Template Start-->
    <DataTemplate x:Key="ComboBoxItemTemplate">
        <TextBlock IsHitTestVisible="False" Background="Transparent">
            <TextBlock.Text>
                <MultiBinding Converter="{StaticResource PersonToTextConverter}">
                    <Binding Path="Titel" />
                    <Binding Path="Name" />
                    <Binding Path="Vorname" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
    </DataTemplate>
    <!--ComboBoxItem Template End-->

    <!--MatchingEditLockToggleButtonTemplate Start-->
    <ControlTemplate x:Key="MatchingEditLockToggleButtonTemplate" TargetType="ToggleButton">
        <Border BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
            <Grid>
                <Path Name="Visual_Part1" Data="M 15.5, 8.4 C 15.2,8.8 20,2 24.7,8.8" Stroke="DimGray"
                      StrokeThickness="2" />
                <Path Name="Visual_Part2" Stroke="DimGray" StrokeThickness="2"
                      Data="M 15.5, 8.4 L 15.5, 20
                                            M 24.5, 8.4 L 24.5, 24.5" />
                <Path Name="Visual_Part3" Data="M 12.5, 25 L 27.5, 25" Stroke="DimGray"
                      StrokeThickness="15" />
                <Path
                    Data="M 19.5,26 A 1,1 0 1 1 20.5,26
                                            M 19.5,24.4 A 1,1 0 1 0 20.5,24.4"
                    Stroke="White" StrokeThickness="3.5" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="Visual_Part1" Property="Stroke" Value="#65BC4A" />
                <Setter TargetName="Visual_Part2" Property="Stroke" Value="#65BC4A" />
                <Setter TargetName="Visual_Part3" Property="Stroke" Value="#65BC4A" />
                <Setter TargetName="Visual_Part2" Property="Data"
                        Value="M 33.5, 8.4 L 33.5, 20 M 24.5, 8.4 L 24.5, 24.5" />
                <Setter TargetName="Visual_Part1" Property="Data"
                        Value="M 24.7,8.4 C 24.7,8.2 29,2 33.7,8.8" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Visual_Part1" Property="Stroke" Value="#9AEDAB" />
                <Setter TargetName="Visual_Part2" Property="Stroke" Value="#9AEDAB" />
                <Setter TargetName="Visual_Part3" Property="Stroke" Value="#9AEDAB" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--MatchingEditLockToggleButtonTemplate End-->

    <!--MatchingTableItemConverter Start-->
    <converter:TextColorConverter x:Key="TextColorConverter" />
    <converter:FontSizeConverter x:Key="FontSizeConverter" />
    <converter:WidthConverter x:Key="WidthConverter" />
    <converter:FontWeightConverter x:Key="FontWeightConverter" />
    <converter:TimeColumnBoolToBorderThicknessConverter
        x:Key="TimeColumnBoolToBorderThicknessConverter" />
    <converter:MatchingMarginConverter x:Key="MatchingMarginConverter" />
    <!--MatchingTableItemConverter End-->

    <!--MatchingTable_DataTemplate_Level2 Template (MatchingItem) Start-->
    <DataTemplate x:Key="DataTemplate_Level2">
        <Border BorderBrush="#FF08D94B"
                BorderThickness="{Binding IsTime, Converter={StaticResource TimeColumnBoolToBorderThicknessConverter}}">
            <TextBox Text="{Binding Content}"
                     Foreground="{Binding IsMentor, Converter={StaticResource TextColorConverter}}"
                     HorizontalContentAlignment="Left"
                     VerticalContentAlignment="Center"
                     TextWrapping="Wrap"
                     Background="{StaticResource HealthCareWhiteBrush}"
                     Width="{Binding IsTime, Converter={StaticResource WidthConverter}}"
                     MinHeight="40"
                     FontSize="{Binding IsMentor, Converter={StaticResource FontSizeConverter}}"
                     FontWeight="{Binding IsMentor, Converter={StaticResource FontWeightConverter}}"
                     BorderThickness="0,0,0,1"
                     BorderBrush="Black"
                     Margin="{Binding IsMentor, Converter={StaticResource MatchingMarginConverter}}"
                     IsReadOnly="{Binding ElementName=CheckBoxReadOnly, Path=IsChecked}"
                     SelectionBrush="#FF08D94B">
                <TextBox.Template>
                    <ControlTemplate TargetType="TextBox">
                        <Border Name="TextBoxBorder"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Foreground="{TemplateBinding Foreground}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          MinHeight="{TemplateBinding MinHeight}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Background="{TemplateBinding Background}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </TextBox.Template>
            </TextBox>
            <Border.Effect>
                <DropShadowEffect Color="{StaticResource HealthCareGray}" ShadowDepth="2"
                                  BlurRadius="5" Opacity="0.4" Direction="270" />
            </Border.Effect>
        </Border>
    </DataTemplate>
    <!--MatchingTable_DataTemplate_Level2 Template (MatchingItem) End-->

    <!--MatchingTable_DataTemplate_Level1 Template (Row) Start-->
    <DataTemplate x:Key="DataTemplate_Level1">
        <ItemsControl ItemsSource="{Binding}" ItemTemplate="{DynamicResource DataTemplate_Level2}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>
    <!--MatchingTable_DataTemplate_Level1 Template (Row) End-->

    <!--MenuItem ControlTemplate Start-->
    <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="MenuItem">
        <Border>
            <TextBlock Text="{TemplateBinding Header}" />
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#9AEDAB" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </ControlTemplate>
    <!--MenuItem ControlTemplate End-->
</ResourceDictionary>